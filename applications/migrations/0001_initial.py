# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2019-08-06 02:47
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0023_communicationslogentry_log_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_type', models.IntegerField(blank=True, choices=[(1, 'Permit'), (2, 'Licence/permit'), (3, 'Part 5'), (4, 'Emergency works'), (5, 'Part 5 - Amendment Request'), (6, 'Part 5 - Amendment Application'), (7, 'Test - Application'), (8, 'Amend Permit'), (9, 'Amend Licence'), (10, 'Renew Permit'), (11, 'Renew Licence')], null=True)),
                ('apply_on_behalf_of', models.IntegerField(blank=True, choices=[(1, 'On Behalf of yourself'), (2, 'On Behalf of your company / government agency'), (3, 'On Behalf of indivdual as somebody else (as an authorised agent)'), (4, 'On Behalf of a company as somebody else (as an authorised agent)'), (5, 'Internal')], null=True)),
                ('state', models.IntegerField(choices=[(0, 'Unknown'), (1, 'Draft'), (2, 'With Admin Officer'), (3, 'With Referrals'), (4, 'With Assessor'), (5, 'With Manager'), (6, 'Issued'), (7, 'Issued (with admin)'), (8, 'Declined'), (9, 'New'), (10, 'Approved'), (11, 'Expired'), (12, 'With Director'), (13, 'With Executive'), (14, 'Completed'), (15, 'Form Creator'), (16, 'Current'), (17, 'Deleted')], default=1, editable=False)),
                ('title', models.CharField(max_length=256)),
                ('description', models.TextField(blank=True, null=True)),
                ('submit_date', models.DateField()),
                ('expire_date', models.DateField(blank=True, null=True)),
                ('proposed_commence', models.DateField(blank=True, null=True)),
                ('proposed_end', models.DateField(blank=True, null=True)),
                ('issue_date', models.DateField(blank=True, null=True)),
                ('cost', models.CharField(blank=True, max_length=256, null=True)),
                ('project_no', models.CharField(blank=True, max_length=256, null=True)),
                ('related_permits', models.TextField(blank=True, null=True)),
                ('over_water', models.BooleanField(default=False)),
                ('vessel_or_craft_details', models.IntegerField(blank=True, null=True)),
                ('max_participants', models.IntegerField(blank=True, null=True)),
                ('proposed_location', models.SmallIntegerField(blank=True, choices=[(0, 'On Land'), (1, 'On Water'), (2, 'Both')], null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('jetties', models.TextField(blank=True, null=True)),
                ('jetty_dot_approval', models.NullBooleanField(default=None)),
                ('jetty_dot_approval_expiry', models.DateField(blank=True, null=True)),
                ('drop_off_pick_up', models.TextField(blank=True, null=True)),
                ('food', models.NullBooleanField(default=None)),
                ('beverage', models.NullBooleanField(default=None)),
                ('liquor_licence', models.NullBooleanField(default=None)),
                ('byo_alcohol', models.NullBooleanField(default=None)),
                ('sullage_disposal', models.TextField(blank=True, null=True)),
                ('waste_disposal', models.TextField(blank=True, null=True)),
                ('refuel_location_method', models.TextField(blank=True, null=True)),
                ('berth_location', models.TextField(blank=True, null=True)),
                ('anchorage', models.TextField(blank=True, null=True)),
                ('operating_details', models.TextField(blank=True, null=True)),
                ('river_lease_require_river_lease', models.NullBooleanField(default=None)),
                ('river_lease_reserve_licence', models.NullBooleanField(default=None)),
                ('river_lease_application_number', models.CharField(blank=True, max_length=30, null=True)),
                ('proposed_development_current_use_of_land', models.TextField(blank=True, null=True)),
                ('proposed_development_description', models.TextField(blank=True, null=True)),
                ('publish_documents', models.DateField(blank=True, null=True)),
                ('publish_draft_report', models.DateField(blank=True, null=True)),
                ('publish_final_report', models.DateField(blank=True, null=True)),
                ('publish_determination_report', models.DateField(blank=True, null=True)),
                ('routeid', models.CharField(blank=True, default=1, max_length=4, null=True)),
                ('assessment_start_date', models.DateField(blank=True, null=True)),
                ('approval_id', models.IntegerField(blank=True, null=True)),
                ('number_of_crafts', models.IntegerField(blank=True, null=True)),
                ('route_status', models.CharField(blank=True, default='Draft', max_length=256, null=True)),
                ('submitter_comment', models.TextField(blank=True, default='', max_length=256, null=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='applicant', to=settings.AUTH_USER_MODEL)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assessed_by', to=settings.AUTH_USER_MODEL)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='assignee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationInvoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_reference', models.CharField(max_length=64)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationPurpose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purpose', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comms_to', models.CharField(blank=True, max_length=256, null=True)),
                ('comms_from', models.CharField(blank=True, max_length=256, null=True)),
                ('subject', models.CharField(blank=True, max_length=256, null=True)),
                ('comms_type', models.IntegerField(choices=[(0, 'None'), (1, 'Phone'), (2, 'Email'), (3, 'Mail'), (4, 'System')], default=0)),
                ('details', models.TextField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.Application')),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comms_to', models.CharField(blank=True, max_length=256, null=True)),
                ('comms_from', models.CharField(blank=True, max_length=256, null=True)),
                ('subject', models.CharField(blank=True, max_length=256, null=True)),
                ('comms_type', models.IntegerField(choices=[(0, 'None'), (1, 'Phone'), (2, 'Email'), (3, 'Mail')], default=0)),
                ('details', models.TextField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationCompliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comms_to', models.CharField(blank=True, max_length=256, null=True)),
                ('comms_from', models.CharField(blank=True, max_length=256, null=True)),
                ('subject', models.CharField(blank=True, max_length=256, null=True)),
                ('comms_type', models.IntegerField(choices=[(0, 'None'), (1, 'Phone'), (2, 'Email'), (3, 'Mail')], default=0)),
                ('details', models.TextField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CommunicationOrganisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comms_to', models.CharField(blank=True, max_length=256, null=True)),
                ('comms_from', models.CharField(blank=True, max_length=256, null=True)),
                ('subject', models.CharField(blank=True, max_length=256, null=True)),
                ('comms_type', models.IntegerField(choices=[(0, 'None'), (1, 'Phone'), (2, 'Email'), (3, 'Mail')], default=0)),
                ('details', models.TextField(blank=True, null=True)),
                ('state', models.IntegerField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='Compliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('app_type', models.IntegerField(blank=True, choices=[(1, 'Permit'), (2, 'Licence/permit'), (3, 'Part 5'), (4, 'Emergency works'), (5, 'Part 5 - Amendment Request'), (6, 'Part 5 - Amendment Application'), (7, 'Test - Application'), (8, 'Amend Permit'), (9, 'Amend Licence'), (10, 'Renew Permit'), (11, 'Renew Licence')], null=True)),
                ('assessed_date', models.DateField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Current'), (2, 'Due'), (3, 'Future'), (4, 'Approved'), (5, 'With Assessor'), (6, 'With Manager'), (7, 'With Licence Holder'), (8, 'Overdue'), (9, 'Submitted')], default=3)),
                ('submit_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('compliance', models.TextField(blank=True, help_text='Information to fulfil requirement of condition.', null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('approve_date', models.DateField(blank=True, null=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='compliance_applicant', to=settings.AUTH_USER_MODEL)),
                ('assessed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='compliance_assigned_by', to=settings.AUTH_USER_MODEL)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='compliance_assignee', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ComplianceGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_id', models.IntegerField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('app_type', models.IntegerField(blank=True, choices=[(1, 'Permit'), (2, 'Licence/permit'), (3, 'Part 5'), (4, 'Emergency works'), (5, 'Part 5 - Amendment Request'), (6, 'Part 5 - Amendment Application'), (7, 'Test - Application'), (8, 'Amend Permit'), (9, 'Amend Licence'), (10, 'Renew Permit'), (11, 'Renew Licence')], null=True)),
                ('status', models.IntegerField(choices=[(1, 'Current'), (2, 'Due'), (3, 'Future'), (4, 'Approved'), (5, 'With Assessor'), (6, 'With Manager'), (7, 'With Licence Holder'), (8, 'Overdue'), (9, 'Submitted')], default=3)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='compliance_group_applicant', to=settings.AUTH_USER_MODEL)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='compliance_group_assignee', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Proposed'), (2, 'Applied'), (3, 'Rejected'), (4, 'Cancelled')], default=1)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('recur_pattern', models.IntegerField(blank=True, choices=[(1, 'Weekly'), (2, 'Monthly'), (3, 'Annually')], null=True)),
                ('recur_freq', models.PositiveIntegerField(blank=True, help_text='How frequently is the recurrence pattern applied (e.g. every 2 months)', null=True, verbose_name='recurrence frequency')),
                ('suspend', models.BooleanField(default=False)),
                ('advise', models.TextField(blank=True, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.Application')),
            ],
        ),
        migrations.CreateModel(
            name='ConditionPredefined',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=256, null=True)),
                ('condition', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Craft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Delegate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='accounts.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lot', models.CharField(blank=True, max_length=256, null=True)),
                ('reserve', models.CharField(blank=True, max_length=256, null=True)),
                ('suburb', models.CharField(blank=True, max_length=256, null=True)),
                ('intersection', models.CharField(blank=True, max_length=256, null=True)),
                ('lga', models.CharField(blank=True, max_length=256, null=True)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326)),
                ('title_volume', models.CharField(blank=True, max_length=256, null=True)),
                ('folio', models.CharField(blank=True, max_length=30, null=True)),
                ('dpd_number', models.CharField(blank=True, max_length=30, null=True)),
                ('location', models.CharField(blank=True, max_length=256, null=True)),
                ('street_number_name', models.CharField(blank=True, max_length=256, null=True)),
                ('local_government_authority', models.CharField(blank=True, max_length=256, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(blank=True, max_length=128, verbose_name='Given name(s)')),
                ('last_name', models.CharField(blank=True, max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=50, null=True)),
                ('fax_number', models.CharField(blank=True, max_length=50, null=True)),
                ('organisation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.Organisation')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationExtras',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pin1', models.CharField(blank=True, max_length=50, null=True)),
                ('pin2', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationPending',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('abn', models.CharField(blank=True, max_length=50, null=True, verbose_name='ABN')),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (2, 'Approved'), (3, 'Declined')], default=1)),
                ('company_exists', models.BooleanField(default=False)),
                ('submit_date', models.DateField(auto_now_add=True, null=True)),
                ('pin1', models.CharField(blank=True, max_length=50, null=True)),
                ('pin2', models.CharField(blank=True, max_length=50, null=True)),
                ('assignee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='org_pending_assignee', to=settings.AUTH_USER_MODEL)),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_pending_billing_address', to='accounts.Address')),
                ('email_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PublicationFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('address', models.CharField(max_length=256)),
                ('suburb', models.CharField(max_length=100)),
                ('state', models.IntegerField(choices=[(1, 'Western Australia'), (2, 'New South Wales'), (3, 'Victoria'), (4, 'South Australia'), (5, 'Northern Territory'), (6, 'Queensland'), (7, 'Australian Capital Territory'), (8, 'Tasmania')])),
                ('postcode', models.CharField(max_length=4)),
                ('phone', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254)),
                ('comments', models.TextField(blank=True, null=True)),
                ('status', models.CharField(max_length=20)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
            ],
        ),
        migrations.CreateModel(
            name='PublicationNewspaper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, null=True)),
                ('newspaper', models.CharField(max_length=150)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
            ],
        ),
        migrations.CreateModel(
            name='PublicationWebsite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload', models.FileField(max_length=512, storage=django.core.files.storage.FileSystemStorage(location=b'/home/jason/projects/statdev-ledger/statdev/private-media'), upload_to='uploads/%Y/%m/%d')),
                ('name', models.CharField(max_length=256)),
                ('category', models.IntegerField(blank=True, choices=[(1, 'Landowner consent'), (2, 'Deed'), (3, 'Assessment report'), (4, 'Referee response'), (5, 'Lodgement document'), (6, 'Draft document'), (7, 'Final document'), (8, 'Determination document'), (9, 'Completed document')], null=True)),
                ('metadata', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('text_content', models.TextField(blank=True, editable=False, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('details', models.TextField(blank=True, null=True)),
                ('sent_date', models.DateField()),
                ('period', models.PositiveIntegerField(verbose_name='period (days)')),
                ('expire_date', models.DateField(blank=True, editable=False, null=True)),
                ('response_date', models.DateField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('proposed_conditions', models.TextField(blank=True, null=True)),
                ('status', models.IntegerField(choices=[(1, 'Referred'), (2, 'Responded'), (3, 'Recalled'), (4, 'Expired'), (5, 'With Admin')], default=5)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
                ('records', models.ManyToManyField(blank=True, to='applications.Record')),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StakeholderComms',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('name', models.CharField(max_length=255)),
                ('sent_date', models.DateTimeField(auto_now_add=True)),
                ('role', models.IntegerField(choices=[(0, 'None'), (1, 'Applicant'), (2, 'Submitter'), (3, 'Referral'), (4, 'Feedback')], default=0)),
                ('comm_type', models.IntegerField(choices=[(0, 'None'), (1, 'Email'), (2, 'Posted')], default=0)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application')),
            ],
        ),
        migrations.CreateModel(
            name='Vessel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vessel_type', models.SmallIntegerField(blank=True, choices=[(0, 'Vessel'), (1, 'Craft')], null=True)),
                ('name', models.CharField(max_length=256)),
                ('vessel_id', models.CharField(blank=True, max_length=256, null=True, verbose_name='Vessel identification')),
                ('size', models.PositiveIntegerField(blank=True, null=True, verbose_name='size (m)')),
                ('engine', models.PositiveIntegerField(blank=True, null=True, verbose_name='engine (kW)')),
                ('passenger_capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('registration', models.ManyToManyField(blank=True, to='applications.Record')),
            ],
        ),
        migrations.AddField(
            model_name='publicationwebsite',
            name='original_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='original_document', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='publicationwebsite',
            name='published_document',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='published_document', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='publicationnewspaper',
            name='records',
            field=models.ManyToManyField(blank=True, related_name='newspaper', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='publicationfeedback',
            name='records',
            field=models.ManyToManyField(blank=True, related_name='feedback', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='organisationpending',
            name='identification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='applications.Record'),
        ),
        migrations.AddField(
            model_name='organisationpending',
            name='postal_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='org_pending_postal_address', to='accounts.Address'),
        ),
        migrations.AddField(
            model_name='organisationextras',
            name='identification',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organisation_extras_org_identification', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='organisationextras',
            name='organisation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='organisation_extras_org_id', to='accounts.Organisation'),
        ),
        migrations.AddField(
            model_name='location',
            name='records',
            field=models.ManyToManyField(blank=True, to='applications.Record'),
        ),
        migrations.AddField(
            model_name='condition',
            name='records',
            field=models.ManyToManyField(blank=True, to='applications.Record'),
        ),
        migrations.AddField(
            model_name='condition',
            name='referral',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='applications.Referral'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='compliance_group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='applications.ComplianceGroup'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='condition',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.Condition'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_group_assignment', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.Organisation'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='records',
            field=models.ManyToManyField(blank=True, to='applications.Record'),
        ),
        migrations.AddField(
            model_name='compliance',
            name='submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='compliance_submitted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communicationorganisation',
            name='records',
            field=models.ManyToManyField(blank=True, related_name='org_communication_docs', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='communicationcompliance',
            name='compliance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='applications.Compliance'),
        ),
        migrations.AddField(
            model_name='communicationcompliance',
            name='records',
            field=models.ManyToManyField(blank=True, related_name='compliance_communication_docs', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='communicationaccount',
            name='records',
            field=models.ManyToManyField(blank=True, related_name='account_communication_docs', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='communicationaccount',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='communication',
            name='records',
            field=models.ManyToManyField(blank=True, related_name='communication_docs', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='brochures_itineries_adverts',
            field=models.ManyToManyField(blank=True, related_name='brochures_itineries_adverts', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='cert_public_liability_insurance',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cert_public_liability_insurace', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='cert_survey',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cert_survey', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='deed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deed', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_briefing_note',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_briefing_note', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_completion',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_completion', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_determination',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_determination', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_determination_approved',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_determination_approved', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_draft',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_draft', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_draft_signed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_draft_signed', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_final',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_final', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_final_signed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_final_signed', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_memo',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_memo', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_new_draft',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_newdraft', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='document_new_draft_v3',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_newdraftv3', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='application_group_assignment', to='auth.Group'),
        ),
        migrations.AddField(
            model_name='application',
            name='land_owner_consent',
            field=models.ManyToManyField(blank=True, related_name='land_owner_consent', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='location_route_access',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_route_access', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='organisation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='accounts.Organisation'),
        ),
        migrations.AddField(
            model_name='application',
            name='other_relevant_documents',
            field=models.ManyToManyField(blank=True, related_name='other_relevant_documents', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='proposed_development_plans',
            field=models.ManyToManyField(blank=True, related_name='proposed_development_plans', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='purpose',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='applications.ApplicationPurpose'),
        ),
        migrations.AddField(
            model_name='application',
            name='records',
            field=models.ManyToManyField(blank=True, related_name='records', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='risk_mgmt_plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='risk_mgmt_plan', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='river_lease_scan_of_application',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='river_lease_scan_of_application', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='safety_mgmt_procedures',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='safety_mgmt_plan', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='Submitted_by', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='application',
            name='supporting_info_demonstrate_compliance_trust_policies',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supporting_info_demonstrate_compliance_trust_policies', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='swan_river_trust_board_feedback',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_swan_river_board_feedback', to='applications.Record'),
        ),
        migrations.AddField(
            model_name='application',
            name='type_of_crafts',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='craft', to='applications.Craft'),
        ),
        migrations.AddField(
            model_name='application',
            name='vessels',
            field=models.ManyToManyField(blank=True, to='applications.Vessel'),
        ),
        migrations.AlterUniqueTogether(
            name='referral',
            unique_together=set([('application', 'referee')]),
        ),
        migrations.AlterUniqueTogether(
            name='delegate',
            unique_together=set([('email_user', 'organisation')]),
        ),
    ]
